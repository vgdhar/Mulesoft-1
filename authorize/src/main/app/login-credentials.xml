<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:context="http://www.springframework.org/schema/context" xmlns:secure-property-placeholder="http://www.mulesoft.org/schema/mule/secure-property-placeholder" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/secure-property-placeholder http://www.mulesoft.org/schema/mule/secure-property-placeholder/current/mule-secure-property-placeholder.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-current.xsd">
    <http:listener-config name="login-credentials-httpListenerConfig" host="0.0.0.0" port="8081" doc:name="HTTP Listener Configuration"/>
    <apikit:config name="login-credentials-config" raml="login-credentials.raml" consoleEnabled="false" doc:name="Router"/>
    <spring:beans>
        <spring:bean id="Bean" name="auth" class="com.mule.authorize.Credentials" scope="singleton"/>
    </spring:beans>
    <secure-property-placeholder:config name="Secure_Property_Placeholder" encryptionAlgorithm="Blowfish" key="eld@cg" location="prod.properties,dev.properties,test.properties,mule-app.properties" doc:name="Secure Property Placeholder"/>
    <context:property-placeholder location="${env}.properties"/>
    <flow name="login-credentials-main">
        <http:listener config-ref="login-credentials-httpListenerConfig" path="/api/*" doc:name="HTTP"/>
        <apikit:router config-ref="login-credentials-config" doc:name="APIkit Router"/>
        <exception-strategy ref="login-credentials-apiKitGlobalExceptionMapping" doc:name="Reference Exception Strategy"/>
    </flow>
    <flow name="login-credentials-console">
        <http:listener config-ref="login-credentials-httpListenerConfig" path="/console/*" doc:name="HTTP"/>
        <apikit:console config-ref="login-credentials-config" doc:name="APIkit Console"/>
    </flow>
    <flow name="post:/authorize/{envType}:application/json:login-credentials-config">
        <set-variable variableName="envType" value="#[message.inboundProperties.'http.uri.params'.envType]" doc:name="environment-type"/>
        <flow-ref name="JSON-Variables" doc:name="JSON-Variables"/>
        <flow-ref name="decisionFlow" doc:name="decisionFlow"/>

    </flow>
    <sub-flow name="JSON-Variables">
        <set-variable variableName="jUserId" value="#[json:userId]" doc:name="JSONuserId"/>
        <set-variable variableName="jUserName" value="#[json:userName]" doc:name="JSONuserName"/>
        <set-variable variableName="jPassword" value="#[json:password]" doc:name="JSONpassword"/>
    </sub-flow>
    <sub-flow name="Dev-Property-Variables">
        <set-variable variableName="userId" value="${dev.userId}" doc:name="DevUserId"/>
        <set-variable variableName="userName" value="${dev.userName}" doc:name="DevUserName"/>
        <set-variable variableName="password" value="${dev.password}" doc:name="DevPassword"/>
    </sub-flow>
    <sub-flow name="Prod-Property-Variables">
        <set-variable variableName="userId" value="${prod.userId}" doc:name="ProdUserId"/>
        <set-variable doc:name="ProdUserName" value="${prod.userName}" variableName="userName"/>
        <set-variable doc:name="ProdPassword" value="${prod.password}" variableName="password"/>
    </sub-flow>
    <sub-flow name="Test-Property-Variables">
        <set-variable doc:name="TestUserId" value="${test.userId}" variableName="userId"/>
        <set-variable doc:name="TestUserName" value="${test.userName}" variableName="userName"/>
        <set-variable doc:name="TestPassword" value="${test.password}" variableName="password"/>
    </sub-flow>
    <sub-flow name="decisionFlow">
        <choice doc:name="Choice">
            <when expression="#[flowVars.envType==&quot;DEV&quot;]">
                <flow-ref name="DEV-flow" doc:name="DEV-flow"/>
            </when>
            <when expression="#[flowVars.envType==&quot;PROD&quot;]">
                <flow-ref name="PROD-flow" doc:name="PROD-flow"/>
            </when>
            <when expression="#[flowVars.envType==&quot;TEST&quot;]">
                <flow-ref name="TEST-flow" doc:name="TEST-flow"/>
            </when>
            <otherwise>
                <flow-ref name="Env-not-found-flow" doc:name="Env-not-found"/>
            </otherwise>
        </choice>
    </sub-flow>
    <sub-flow name="Env-not-found-flow">
        <set-payload doc:name="Set Payload" value="&quot;Environment not found. Kindly specify either DEV, PROD or TEST environments.&quot;"/>
    </sub-flow>
    <sub-flow name="DEV-flow">
        <flow-ref name="Dev-Property-Variables" doc:name="Dev-Property-Variables"/>
        <component doc:name="Java" class="com.mule.authorize.Credentials"/>
        <object-to-string-transformer doc:name="Object to String"/>
    </sub-flow>
    <sub-flow name="PROD-flow">
        <flow-ref name="Prod-Property-Variables" doc:name="Prod-Property-Variables"/>
        <component doc:name="Java" class="com.mule.authorize.Credentials"/>
        <object-to-string-transformer doc:name="Object to String"/>
    </sub-flow>
    <sub-flow name="TEST-flow">
        <flow-ref name="Test-Property-Variables" doc:name="Test-Property-Variables"/>
        <component doc:name="Java" class="com.mule.authorize.Credentials"/>
        <object-to-string-transformer doc:name="Object to String"/>
    </sub-flow>
    <apikit:mapping-exception-strategy name="login-credentials-apiKitGlobalExceptionMapping">
        <apikit:mapping statusCode="404">
            <apikit:exception value="org.mule.module.apikit.exception.NotFoundException"/>
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="Resource cannot be located in the repository. Please try again later" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="405">
            <apikit:exception value="org.mule.module.apikit.exception.MethodNotAllowedException"/>
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="Method not allowed.
Kindly only use POST requests to this URI." doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="415">
            <apikit:exception value="org.mule.module.apikit.exception.UnsupportedMediaTypeException"/>
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="The media type you've entered is not supported. Kindly use application/JSON as the media type." doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="406">
            <apikit:exception value="org.mule.module.apikit.exception.NotAcceptableException"/>
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Not acceptable&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="400">
            <apikit:exception value="org.mule.module.apikit.exception.BadRequestException"/>
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="Kindly specify all the credentials in the body in JSON format." doc:name="Set Payload"/>
        </apikit:mapping>
    </apikit:mapping-exception-strategy>

</mule>
